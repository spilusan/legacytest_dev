# Use an official PHP 8.2 image as the base
FROM aolb/php82-apache-oci:v1 


COPY ./docker/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf
COPY ./docker/php/custom-php-prod.ini /usr/local/etc/php/conf.d/custom-php.ini
# TODO Mount proper ini in, or encode it and add to pipeline variable, fetch and create file
COPY ./application.ini /prod/application.ini
COPY ./ /var/www/html

RUN echo "SetEnv APPLICATION_ENV production" >> /etc/apache2/apache2.conf \
    && echo "memory_limit=2048M" > /usr/local/etc/php/conf.d/memory-limit.ini \
    && echo "error_reporting = E_ALL & ~E_NOTICE & ~E_DEPRECATED & ~E_STRICT & ~E_WARNING" > /usr/local/etc/php/conf.d/error-reporting.ini \
    && sed -i 's/^ServerSignature On$/ServerSignature Off/' /etc/apache2/conf-available/security.conf \
    && sed -i 's/^ServerTokens OS$/ServerTokens Prod/' /etc/apache2/conf-available/security.conf \
    && sed -i 's/^TraceEnable On$/TraceEnable Off/' /etc/apache2/conf-available/security.conf \
    && echo "ServerSignature Off" >> /etc/apache2/apache2.conf \
    && echo "ServerTokens Prod" >> /etc/apache2/apache2.conf \
    && echo "TraceEnable off" >> /etc/apache2/apache2.conf

# add required directories
RUN mkdir -p /var/log/apache2/ \
    && mkdir -p /prod/logs/webreporter/backend/logs /var/www/devphpreports/php-webreporter/logs /prod/logs/pages /prod/logs/match \
    && touch /prod/logs/match/match-log.log && touch /prod/logs/match/match-memcache.log \
    && chown -R www-data:www-data /prod/logs/pages/ /prod/logs/match/ /var/www/devphpreports/php-webreporter/logs \
    && chmod -R 777 /prod/logs/pages/ /prod/logs/match/ /var/www/devphpreports/php-webreporter/logs /prod/logs/webreporter/backend/logs

RUN composer install \
    && npm install \
    && gulp build
